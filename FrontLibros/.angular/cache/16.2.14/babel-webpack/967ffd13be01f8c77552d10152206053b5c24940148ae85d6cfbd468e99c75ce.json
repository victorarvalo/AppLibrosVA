{"ast":null,"code":"import { environment } from 'src/app/enviroments/enviroment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryServiceService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.myAppUrl;\n    this.myApiUrl = \"api/Category/\";\n  }\n  getAllCategories() {\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}GetCategories`);\n  }\n  getCategoryById(id) {\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}GetCategoryById/${id}`, {\n      observe: 'response'\n    });\n  }\n  postCreateCategory(Category) {\n    return this.http.post(`${this.myAppUrl}${this.myApiUrl}PostCategory`, Category);\n  }\n  putUpdateCategory(id, Category) {\n    return this.http.put(`${this.myAppUrl}${this.myApiUrl}PutCategory/${id}`, Category);\n  }\n  static #_ = this.ɵfac = function CategoryServiceService_Factory(t) {\n    return new (t || CategoryServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryServiceService,\n    factory: CategoryServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","CategoryServiceService","constructor","http","myAppUrl","myApiUrl","getAllCategories","get","getCategoryById","id","observe","postCreateCategory","Category","post","putUpdateCategory","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\CXVXC\\Documents\\LibrosApp\\AppLibrosVA\\FrontLibros\\src\\app\\Library\\Services\\category.Service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/app/enviroments/enviroment';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryServiceService {\n\n  private myAppUrl = environment.myAppUrl\n  private myApiUrl = \"api/Category/\"\n\n  constructor(private http: HttpClient) { }\n\n  getAllCategories():Observable<any>{\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}GetCategories`)\n  }\n\n  getCategoryById(id:number):Observable<any>{\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}GetCategoryById/${id}`, { observe: 'response'})\n  }\n\n  postCreateCategory(Category:any):Observable<any>{\n    return this.http.post(`${this.myAppUrl}${this.myApiUrl}PostCategory`, Category);\n  }\n\n  putUpdateCategory(id:number,Category:any):Observable<any>{\n    return this.http.put(`${this.myAppUrl}${this.myApiUrl}PutCategory/${id}`,Category);\n  }\n\n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,gCAAgC;;;AAO5D,OAAM,MAAOC,sBAAsB;EAKjCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,QAAQ,GAAGJ,WAAW,CAACI,QAAQ;IAC/B,KAAAC,QAAQ,GAAG,eAAe;EAEM;EAExCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACC,QAAQ,eAAe,CAAC;EACvE;EAEAG,eAAeA,CAACC,EAAS;IACvB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACC,QAAQ,mBAAmBI,EAAE,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAU,CAAC,CAAC;EACvG;EAEAC,kBAAkBA,CAACC,QAAY;IAC7B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,QAAQ,GAAG,IAAI,CAACC,QAAQ,cAAc,EAAEO,QAAQ,CAAC;EACjF;EAEAE,iBAAiBA,CAACL,EAAS,EAACG,QAAY;IACtC,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAC,GAAG,IAAI,CAACX,QAAQ,GAAG,IAAI,CAACC,QAAQ,eAAeI,EAAE,EAAE,EAACG,QAAQ,CAAC;EACpF;EAAC,QAAAI,CAAA,G;qBArBUf,sBAAsB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAtBpB,sBAAsB;IAAAqB,OAAA,EAAtBrB,sBAAsB,CAAAsB,IAAA;IAAAC,UAAA,EAFrB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}