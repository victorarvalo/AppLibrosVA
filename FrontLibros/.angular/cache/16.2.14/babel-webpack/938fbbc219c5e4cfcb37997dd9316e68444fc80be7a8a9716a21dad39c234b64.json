{"ast":null,"code":"import { environment } from 'src/app/enviroments/enviroment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookServiceService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.myAppUrl;\n    this.myApiUrl = \"api/Book/\";\n  }\n  getAllBooks() {\n    debugger;\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}GetBooks`);\n  }\n  getBookById(id) {\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}GetBookById/${id}`, {\n      observe: 'response'\n    });\n  }\n  postCreateBook(Book) {\n    return this.http.post(`${this.myAppUrl}${this.myApiUrl}PostBook`, Book);\n  }\n  putUpdateBook(id, Book) {\n    return this.http.put(`${this.myAppUrl}${this.myApiUrl}PutBook/${id}`, Book);\n  }\n  static #_ = this.ɵfac = function BookServiceService_Factory(t) {\n    return new (t || BookServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookServiceService,\n    factory: BookServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","BookServiceService","constructor","http","myAppUrl","myApiUrl","getAllBooks","get","getBookById","id","observe","postCreateBook","Book","post","putUpdateBook","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\CXVXC\\Documents\\LibrosApp\\AppLibrosVA\\FrontLibros\\src\\app\\Library\\Services\\book.service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/app/enviroments/enviroment';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookServiceService {\n\n  private myAppUrl = environment.myAppUrl\n  private myApiUrl = \"api/Book/\"\n\n  constructor(private http: HttpClient) { }\n\n  getAllBooks():Observable<any>{\n    debugger;\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}GetBooks`)\n  }\n\n  getBookById(id:number):Observable<any>{\n    return this.http.get(`${this.myAppUrl}${this.myApiUrl}GetBookById/${id}`, { observe: 'response'})\n  }\n\n  postCreateBook(Book:any):Observable<any>{\n    return this.http.post(`${this.myAppUrl}${this.myApiUrl}PostBook`, Book);\n  }\n\n  putUpdateBook(id:number,Book:any):Observable<any>{\n    return this.http.put(`${this.myAppUrl}${this.myApiUrl}PutBook/${id}`,Book);\n  }\n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,gCAAgC;;;AAO5D,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,QAAQ,GAAGJ,WAAW,CAACI,QAAQ;IAC/B,KAAAC,QAAQ,GAAG,WAAW;EAEU;EAExCC,WAAWA,CAAA;IACT;IACA,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACC,QAAQ,UAAU,CAAC;EAClE;EAEAG,WAAWA,CAACC,EAAS;IACnB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACC,QAAQ,eAAeI,EAAE,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAU,CAAC,CAAC;EACnG;EAEAC,cAAcA,CAACC,IAAQ;IACrB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,QAAQ,GAAG,IAAI,CAACC,QAAQ,UAAU,EAAEO,IAAI,CAAC;EACzE;EAEAE,aAAaA,CAACL,EAAS,EAACG,IAAQ;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAC,GAAG,IAAI,CAACX,QAAQ,GAAG,IAAI,CAACC,QAAQ,WAAWI,EAAE,EAAE,EAACG,IAAI,CAAC;EAC5E;EAAC,QAAAI,CAAA,G;qBAtBUf,kBAAkB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBpB,kBAAkB;IAAAqB,OAAA,EAAlBrB,kBAAkB,CAAAsB,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}